openapi: 3.0.0

info:
  title: <APPLICATION NAME>
  description: <APPLICATION DESCRIPTION>
  version: <APPLICATION VERSION>
  x-application-name: <APPLICATION NAME>
  x-oauth-client:
    client-id:
    callback: <APPLICATION SERVER CALLBACK ADDRESS>
    scopes: ["scope1", "scope2", "scopeN"]
  x-contacts:
    - <MAIL ADDRESS OF MAINTAINER>
  x-logo: <ENDPOINT TO APPLICATION LOGO>
  x-products:
    - name: <PRODUCT NAME>
      product-id:
      description: <PRODUCT DESCRIPTION>
servers:
  - url: <APPLICATION SERVER ENDPOINT>

tags:
  - name: FrontPage
    description: Provides functionalities for web applications.
  - name: System
    description: Provides functionalities for operability of applications.
  - name: DataSource
    description: Provides functionalities for data fetching applications.
  - name: DataSink
    description: Provides functionalities for data storing applications.
  - name: Transformation
    description: Provides functionalities for data manipulation applications.

paths:
  /:
    get:
      security:
        - bearerAuth: []
      tags:
        - FrontPage
      summary: frontend
      description: Goes to login page of the application
      operationId: frontend
      responses:
        "200":
          description: Navigates to the page
        "404":
          description: Not found

  /dataForm:
    get:
      security:
        - bearerAuth: []
      tags:
        - FrontPage
      summary: formPage
      description: Goes to formPage of the application
      operationId: formPage
      responses:
        "200":
          description: Navigates to the form page
        "404":
          description: Not found

  /heartbeat:
    get:
      security:
        - bearerAuth: []
      tags:
        - System
      summary: heartbeat
      description: To check if an application is alive
      operationId: heartbeat
      responses:
        "200":
          description: Success
        "404":
          description: Not found

  /globalSearch:
    get:
      security:
        - bearerAuth: []
      tags:
        - System
      summary: GlobalSearch
      description: globalSearch
      operationId: globalSearch
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful Response
        "422":
          description: Validation Error

  /datasets/{resourceId}/{query}:
    get:
      security:
        - bearerAuth: []
      tags:
        - DataSource
      summary: queryDataset
      description: search a particular dataset
      operationId: queryDataset
      parameters:
        - in: path
          name: query
          schema:
            type: string
          required: true
        - in: path
          name: resourceId
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful Response
        "400":
          description: Bad Request

  /datasets/{query}:
    get:
      security:
        - bearerAuth: []
      tags:
        - DataSource
      summary: queryCollection
      description: Query a collection
      operationId: queryCollection
      parameters:
        - in: path
          name: query
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful Response
        "400":
          description: Bad Request
    post:
      security:
        - bearerAuth: []
      tags:
        - DataSource
      summary: postQueryCollection
      description: Query a collection(Post for GraphQL)
      operationId: postQueryCollection
      parameters:
        - in: path
          name: query
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful Response
        "400":
          description: Bad Request

  /datasets/:
    get:
      security:
        - bearerAuth: []
      tags:
        - DataSource
      summary: getCollection
      description: Fetches list of datasets
      operationId: getCollection
      responses:
        "200":
          description: Success
        "404":
          description: Not found
    post:
      security:
        - bearerAuth: []
      tags:
        - DataSink
      summary: createCollection
      description: create a collection (e.g. for workflows)
      operationId: createCollection
      responses:
        "200":
          description: Success
        "404":
          description: Not found
        "400":
          description: Bad Request

  /dataset/:
    post:
      security:
        - bearerAuth: []
      tags:
        - DataSink
      summary: createDataset
      description: create a new dataset
      operationId: createDataset
      responses:
        "200":
          description: Success
        "404":
          description: Not found
        "400":
          description: Bad Request

  /datasets/cuds/:
    get:
      security:
        - bearerAuth: []
      tags:
        - DataSource
      summary: getCudsCollection
      description: Fetches list of cuds datasets (schema from datasink demo)
      operationId: getCudsCollection
      responses:
        "200":
          description: Catalog/collection loaded succesfully.
        "404":
          description: Not found
    post:
      security:
        - bearerAuth: []
      tags:
        - DataSink
      summary: createCudsDataset
      description: Store cuds dataset (schema from datasink demo)
      operationId: createCudsDataset
      responses:
        "'200'":
          description: Dataset is created successfully.
        "404":
          description: Not found
        "400":
          description: Bad Request

  /datasets/{resourceId}:
    parameters:
      - in: path
        name: resourceId
        schema:
          type: string
        required: true
    get:
      security:
        - bearerAuth: []
      tags:
        - DataSource
      summary: getDataset
      description: Fetches a particular Dataset
      operationId: getDataset
      responses:
        "200":
          description: Success
        "404":
          description: Not found
        "400":
          description: Bad Request
    put:
      security:
        - bearerAuth: []
      tags:
        - DataSink
      summary: updateDataset
      description: Edit a dataset
      operationId: updateDataset
      responses:
        "200":
          description: Success
        "404":
          description: Not found
        "400":
          description: Bad Request
    delete:
      security:
        - bearerAuth: []
      tags:
        - DataSink
      summary: deleteDataset
      description: Delete a dataset
      operationId: deleteDataset
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          description: Not found

  /datasets/cuds/{resourceId}:
    parameters:
      - in: path
        name: resourceId
        schema:
          type: string
        required: true
    get:
      security:
        - bearerAuth: []
      tags:
        - DataSource
      summary: getCudsDataset
      description: Fetches a particular Cuds Dataset
      operationId: getCudsDataset
      responses:
        "200":
          description: Success
        "404":
          description: Not found
    put:
      security:
        - bearerAuth: []
      tags:
        - DataSink
      summary: updateCudsDataset
      description: Edit a cuds dataset (schema from datasink-demo)
      operationId: updateCudsDataset
      responses:
        "200":
          description: Success
        "404":
          description: Not found
        "400":
          description: Bad Request
    delete:
      security:
        - bearerAuth: []
      tags:
        - DataSink
      summary: deleteCudsDataset
      description: Delete a dataset
      operationId: deleteCudsDataset
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          description: Not found

  /metadata/{datatype}:
    get:
      security:
        - bearerAuth: []
      tags:
        - DataSource
      summary: getMetadata
      description: fetch information about certain sets of data
      operationId: getMetadata
      parameters:
        - in: path
          name: datatype
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Success
        "404":
          description: Not found
  /datasets/uri/:
    post:
      security:
        - bearerAuth: []
      tags:
        - DataSink
      summary: createDatasetFromURI
      description: store a dataset by fetching the data from a URI
      operationId: createDatasetFromURI
      responses:
        "200":
          description: Success
        "404":
          description: Not found
        "400":
          description: Bad Request

  /datasets/uri/{resourceId}:
    put:
      security:
        - bearerAuth: []
      tags:
        - DataSink
      summary: updateDatasetFromURI
      description: update a dataset by fetching the data from a URI
      operationId: updateDatasetFromURI
      parameters:
        - in: path
          name: resourceId
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Success
        "404":
          description: Not found
        "400":
          description: Bad Request

  /intialize/:
    post:
      security:
        - bearerAuth: []
      tags:
        - Transformation
      summary: newTransformation
      description: Initialize a Transformation
      operationId: newTransformation
      responses:
        "200":
          description: Success
        "400":
          description: Bad Request
        "404":
          description: Not found

  /run/{transformationId}:
    post:
      security:
        - bearerAuth: []
      tags:
        - Transformation
      summary: startTransformation
      description: Start execution of a Transformation
      operationId: startTransformation
      parameters:
        - in: path
          name: transformationId
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Success
        "404":
          description: Not found

  /stop/{transformationId}:
    post:
      security:
        - bearerAuth: []
      tags:
        - Transformation
      summary: stopTransformation
      description: Stop the execution of a Transformation
      operationId: stopTransformation
      parameters:
        - in: path
          name: transformationId
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Success
        "404":
          description: Not found

  /status/{transformationId}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Transformation
      summary: getTransformationStatus
      description: Get the status of a Transformation
      operationId: getTransformationStatus
      parameters:
        - in: path
          name: transformationId
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Success
        "404":
          description: Not found

  /remove/{transformationId}:
    delete:
      security:
        - bearerAuth: []
      tags:
        - Transformation
      summary: deleteTransformation
      description: Delete a Transformation
      operationId: deleteTransformation
      parameters:
        - in: path
          name: transformationId
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Success
        "404":
          description: Not found

  /getTransformations:
    get:
      security:
        - bearerAuth: []
      tags:
        - Transformation
      summary: getTransformationList
      description: Get the List of Transformations
      operationId: getTransformationList
      responses:
        "200":
          description: Success
        "404":
          description: Not found

  /schemas/{schema_id}/attributes:
    get:
      security:
        - bearerAuth: []
      tags:
        - DataSource
      summary: getDatasetAttributes
      description: List attributes included in specified dataset
      operationId: getDatasetAttributes
      parameters:
        - description: Schema ID (similar to datasetId)
          in: path
          name: schema_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "404":
          description: Not Found

  /schemas/{schema_id}/export:
    parameters:
      - description: Schema ID (similar to datasetId)
        in: path
        name: schema_id
        required: true
        schema:
          type: string
    post:
      security:
        - bearerAuth: []
      tags:
        - DataSource
      summary: exportDatasetWithAttributes
      description: Export data with attribute values of datasets
      operationId: exportDatasetWithAttributes
      responses:
        "200":
          description: OK
        "404":
          description: Not Found

  /schemas/{schema_id}/search:
    parameters:
      - description: Schema ID (similar to datasetId)
        in: path
        name: schema_id
        required: true
        schema:
          type: string
    post:
      security:
        - bearerAuth: []
      tags:
        - DataSource
      summary: postQueryDataset
      description: Execute search query on datasets
      operationId: postQueryDataset
      responses:
        "200":
          description: OK
        "404":
          description: Not Found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
